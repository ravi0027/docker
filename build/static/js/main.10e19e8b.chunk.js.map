{"version":3,"sources":["component/Post.js","component/Postform.js","App.js","reportWebVitals.js","index.js"],"names":["Post","props","submitHandler","e","preventDefault","axios","get","then","response","console","log","data","state","posts","onSubmit","this","type","Component","Postform","changeHandler","setState","target","name","value","post","res","catch","err","Id","title","onChange","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAEaA,EAAb,kDACI,WAAYC,GAAO,IAAD,8BACd,cAAMA,IASVC,cAAe,SAAAC,GACXA,EAAEC,iBACFC,IAAMC,IAAI,mCAETC,MAAK,SAAAC,GAAQ,OAEVC,QAAQC,IAAIF,EAASG,UAdzB,EAAKC,MAAM,CACPC,MAAO,IAHG,EADtB,0CAmBI,WAGK,OACG,8BAGA,sBAAMC,SAAUC,KAAKb,cAArB,SACA,wBAAQc,KAAK,SAAb,2BA3BZ,GAA0BC,a,QCAbC,EAAb,kDACC,WAAYjB,GAAQ,IAAD,8BAClB,cAAMA,IAQPkB,cAAgB,SAAAhB,GACf,EAAKiB,SAAL,eAAiBjB,EAAEkB,OAAOC,KAAOnB,EAAEkB,OAAOE,SAVxB,EAanBrB,cAAgB,SAAAC,GACfA,EAAEC,iBASFC,IAAMmB,KAAK,mCAAmC,EAAKZ,OACxCL,MAAK,SAAAkB,GAEHhB,QAAQC,IAAIe,EAAId,SAElBe,OAAM,SAAAC,GACKlB,QAAQC,IAAI,QAASiB,OA1B3C,EAAKf,MAAQ,CACZgB,GAAI,GACJC,MAAO,IALU,EADpB,0CAkCC,WACC,MAAqBd,KAAKH,MAAlBgB,EAAR,EAAQA,GAAIC,EAAZ,EAAYA,MACZ,OACC,8BACC,uBAAMf,SAAUC,KAAKb,cAArB,UACC,8BACC,uBACCc,KAAK,OACLM,KAAK,KACLC,MAAOK,EACPE,SAAUf,KAAKI,kBAGjB,8BACC,uBACCH,KAAK,OACLM,KAAK,QACLC,MAAOM,EACPC,SAAUf,KAAKI,kBAGjB,wBAAQH,KAAK,SAAb,6BAvDL,GAA8BC,aCYfc,MAVf,WACE,OACE,sBAAKC,UAAU,MAAf,UAEE,cAAC,EAAD,IACA,cAAC,EAAD,QCGSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.10e19e8b.chunk.js","sourcesContent":["import React,{ Component } from \"react\"\nimport axios from \"axios\"\nexport class Post extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            posts: []\n        };\n    }\n    // .then(response=>this.setState({ \n    //     //posts:response\n    //     console.log(this.posts)\n    // }))\n    submitHandler= e =>{\n        e.preventDefault()\n        axios.get('http://localhost:8080/album/get')\n\n        .then(response=>\n\n            console.log(response.data)\n        )}\n    render()\n    {\n\n         return(\n            <div>\n                \n             {/* { this.state.posts.map(post=><p>{post.id},{post.title}</p>)} */}\n            <form onSubmit={this.submitHandler}>\n            <button type=\"submit\">Click</button>\n            </form>           \n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport axios from 'axios'\nexport class Postform extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n\t\t\tId: '',\n\t\t\ttitle: ''\n\t\t}\n\t}\n\n\tchangeHandler = e => {\n\t\tthis.setState({ [e.target.name]: e.target.value })\n\t}\n\n\tsubmitHandler = e => {\n\t\te.preventDefault()\n\t\t//console.log(\"raviii\",this.state)\n\t\t// axios\n\t\t// \t.post('https://jsonplaceholder.typicode.com/posts', this.state)\n\t\t// \t.then(response => {\n\t\t// \t})\n\t\t// \t.catch(error => {\n\t\t// \t\tconsole.log(error)\n\t\t// \t})\n\t\taxios.post('http://localhost:8080/album/post',this.state)\n            .then(res=>{\n                // console.log(res)\n               console.log(res.data)\n            })\n            .catch(err => {\n                        console.log(\"error\", err);\n                    });\n\t}\n\n\trender() {\n\t\tconst { Id, title} = this.state\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<form onSubmit={this.submitHandler}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"Id\"\n\t\t\t\t\t\t\tvalue={Id}\n\t\t\t\t\t\t\tonChange={this.changeHandler}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\t\tvalue={title}\n\t\t\t\t\t\t\tonChange={this.changeHandler}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button type=\"submit\">Submit</button>\n\t\t\t\t\t\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","\nimport './App.css';\nimport {Post} from'../src/component/Post';\nimport {Postform} from'../src/component/Postform';\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <Postform />\n      <Post />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}